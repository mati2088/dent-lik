"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PerformActivitiesAsPlaywrightSteps = void 0;
const core_1 = require("@serenity-js/core");
const objects_1 = require("tiny-types/lib/objects");
class PerformActivitiesAsPlaywrightSteps extends core_1.PerformActivities {
    constructor(actor, stage, test) {
        super(actor, stage);
        this.test = test;
    }
    async perform(activity) {
        const testInfo = this.test.info();
        // see https://github.com/microsoft/playwright/issues/23157
        const runAsStep = (testInfo['_runAsStep']).bind(testInfo);
        return runAsStep({
            category: 'test.step',
            title: this.nameOf(activity),
            location: this.locationOf(activity),
            params: this.parametersOf(activity),
        }, async (step_) => {
            await super.perform(activity);
        });
    }
    parametersOf(activity) {
        if (activity instanceof core_1.Interaction) {
            return (0, objects_1.significantFieldsOf)(activity).reduce((acc, field) => {
                acc[field] = (0, core_1.d) `${activity[field]}`;
                return acc;
            }, {});
        }
        return {};
    }
    locationOf(activity) {
        const instantiationLocation = activity.instantiationLocation();
        return {
            file: instantiationLocation.path.value,
            line: instantiationLocation.line,
            column: instantiationLocation.column
        };
    }
}
exports.PerformActivitiesAsPlaywrightSteps = PerformActivitiesAsPlaywrightSteps;
//# sourceMappingURL=PerformActivitiesAsPlaywrightSteps.js.map